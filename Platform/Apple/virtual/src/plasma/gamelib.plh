///////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (C) 2016 The 8-Bit Bunch. Licensed under the Apache License, Version 1.1
// (the "License"); you may not use this file except in compliance with the License.
// You may obtain a copy of the License at <http://www.apache.org/licenses/LICENSE-1.1>.
// Unless required by applicable law or agreed to in writing, software distributed under
// the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
// ANY KIND, either express or implied. See the License for the specific language
// governing permissions and limitations under the License.
///////////////////////////////////////////////////////////////////////////////////////////////////

import gamelib

  //////////// Shared library routines ////////////
  // Let's try to keep these predef's in lexical order
  predef addEncounterZone(code, x, y, dist, chance)#0
  predef addGold(amount)
  predef addPlayerToParty(playerFuncNum)#0
  predef addToList(addTo, p)#0
  predef addToString(str)
  predef addUnique(pList, p_thing)
  predef auxMmgr(cmd, param)
  predef beep()
  predef benchPlayer()
  predef brk()
  predef buildString(pFunc)
  predef buySell
  predef calcPlayerArmor
  predef calcWidth
  predef callGlobalFunc
  predef charToUpper
  predef checkEncounter
  predef clearEncounterZones
  predef clearPortrait
  predef clearWindow
  predef countArray
  predef countList
  predef countListFiltered
  predef displayChar
  predef displayf1(fmt, arg1)#0
  predef displayf2(fmt, arg1, arg2)#0
  predef displayf3(fmt, arg1, arg2, arg3)#0
  predef displayStr
  predef encodeDice
  predef fatal
  predef finalWin
  predef finishString
  predef flipToPage1()#0
  predef getCharResponse
  predef getDir()
  predef getGameFlag
  predef getPos(px, py)#0
  predef getStat(player, statName)
  predef getStringResponse
  predef getUpperKey
  predef getYN
  predef giveItemToPlayer
  predef initHeap
  predef loadFrameImg
  predef loadMainFrameImg
  predef makeModifier
  predef max
  predef memcpy
  predef min
  predef mmgr
  predef moveWayBackward
  predef parseDec
  predef parseDecWithDefault
  predef partyHasPlayer
  predef pause
  predef payGold
  predef playerHasItem
  predef printf1(fmt, arg1)#0
  predef printf2(fmt, arg1, arg2)#0
  predef printf3(fmt, arg1, arg2, arg3)#0
  predef printHex(num)
  predef puts(str)#0
  predef queue_setMap(is3D, num, x, y, dir)#0
  predef queue_teleport(x, y, dir)#0
  predef rand16
  predef randomFromArray
  predef randomFromListFiltered
  predef rawDisplayf1(fmt, arg1)#0
  predef rawDisplayf2(fmt, arg1, arg2)#0
  predef rawDisplayf3(fmt, arg1, arg2, arg3)#0
  predef rawDisplayStr(str)
  predef rdkey
  predef readStr
  predef reboot
  predef removeFromList
  predef removePlayerFromParty
  predef rightJustifyNum
  predef rightJustifyStr
  predef rollDice
  predef scanForNamedObj
  predef scriptCombat
  predef scriptDisplayStr(str)#0
  predef scriptDisplayStrNL(str)#0
  predef scriptEvent
  predef scriptSetAvatar
  predef scriptSwapTile
  predef setCmd
  predef setGameFlag
  predef setGround(num)#0
  predef setIntimateMode
  predef setIntimateMode
  predef setMap
  predef setMapWindow
  predef setBigWindow
  predef setPlural
  predef setPortrait
  predef setScriptInfo(mapName, trigTbl, wdt, hgt)#0
  predef setSky(num)#0
  predef setStat(player, statName, val)#0
  predef setWindow
  predef setWindow1()#0
  predef setWindow2()#0
  predef setWindow3()#0
  predef showMapName
  predef showParty
  predef sprintf1(fmt, arg1)
  predef sprintf2(fmt, arg1, arg2)
  predef sprintf3(fmt, arg1, arg2, arg3)
  predef streqi
  predef strncpy
  predef takeItemFromPlayer
  predef textHome
  predef tossStrings()#0
  predef unbenchPlayer

  // This pointer is the root of all heap-tracked (and garbage collected) objects.
  // See playtype.plh for definitions of all the datastructures and how they interconnect.
  word global

  // Other global variables
  byte mapNum
  byte mapIs3D
  word skyNum
  word groundNum
  byte portraitNum
  word pGodModule

  /////////// Shared string constants //////////////

  // First: attributes
  byte[] S_INTELLIGENCE, S_STRENGTH, S_AGILITY, S_STAMINA, S_CHARISMA, S_SPIRIT, S_LUCK
  byte[] S_HEALTH, S_MAX_HEALTH, S_AIMING, S_HAND_TO_HAND, S_DODGING, S_GOLD

  // Next: common events
  byte[] S_ENTER, S_LEAVE, S_USE
end
